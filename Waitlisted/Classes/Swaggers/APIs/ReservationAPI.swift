//
// ReservationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension WaitlistedAPI {


public class ReservationAPI: APIBase {
    /**

     - parameter body: (body) Reservation Data 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createReservation(body body: Reservation, completion: ((data: ReservationsResponse?, error: ErrorType?) -> Void)) {
        createReservationWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /reservations
     - Creates a new reservation.
     - examples: [{contentType=application/json, example={
  "activated_at" : "2000-01-23T04:56:07.000+00:00",
  "total_count" : 505,
  "name" : "Sam Smith",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "dea681f300a068fb29a4790c866cbd18",
  "position" : 93,
  "affiliate" : "dea681f3",
  "uuid" : "dea681f300a068fb29a4790c866cbd18",
  "email" : "test@waitlisted.co",
  "referred_count" : 2
}}]
     
     - parameter body: (body) Reservation Data 

     - returns: RequestBuilder<ReservationsResponse> 
     */
    public class func createReservationWithRequestBuilder(body body: Reservation) -> RequestBuilder<ReservationsResponse> {
        let path = "/reservations"
        let URLString = WaitlistedAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ReservationsResponse>.Type = WaitlistedAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter body: (body) Reservation Data 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteReservation(body body: ReservationRequest, completion: ((error: ErrorType?) -> Void)) {
        deleteReservationWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /reservations
     - Delete a reservation.
     
     - parameter body: (body) Reservation Data 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteReservationWithRequestBuilder(body body: ReservationRequest) -> RequestBuilder<Void> {
        let path = "/reservations"
        let URLString = WaitlistedAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = WaitlistedAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter email: (query) Email address 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getReservation(email email: String, completion: ((data: ReservationsResponse?, error: ErrorType?) -> Void)) {
        getReservationWithRequestBuilder(email: email).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /reservations
     - Get a reservation.
     - examples: [{contentType=application/json, example={
  "activated_at" : "2000-01-23T04:56:07.000+00:00",
  "total_count" : 505,
  "name" : "Sam Smith",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "dea681f300a068fb29a4790c866cbd18",
  "position" : 93,
  "affiliate" : "dea681f3",
  "uuid" : "dea681f300a068fb29a4790c866cbd18",
  "email" : "test@waitlisted.co",
  "referred_count" : 2
}}]
     
     - parameter email: (query) Email address 

     - returns: RequestBuilder<ReservationsResponse> 
     */
    public class func getReservationWithRequestBuilder(email email: String) -> RequestBuilder<ReservationsResponse> {
        let path = "/reservations"
        let URLString = WaitlistedAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "email": email
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ReservationsResponse>.Type = WaitlistedAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
}
